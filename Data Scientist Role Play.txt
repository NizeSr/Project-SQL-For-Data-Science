BY: Sirapassorn Hyoohnoosingh

Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i.    Attribute table    = 10000
ii.   Business table     = 10000
iii.  Category table     = 10000 
iv.   Checkin table      = 10000
v.    elite_years table  = 10000
vi.   friend table       = 10000
vii.  hours table        = 10000
viii. photo table        = 10000
ix.   review table       = 10000
x.    tip table          = 10000
xi.   user table         = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i.    Business    = 10000(Primary key)
ii.   Hours       = 1562(Foreign key)
iii.  Category    = 2643(Foreign key)
iv.   Attribute   = 1115(Foreign key)
v.    Review      = 10000(Primary key), 8090(Business_ID, Foreign key), 9581(User_ID, Foreign key)
vi.   Checkin     = 493(Foreign key)
vii.  Photo       = 10000(Primary key), 6493(Business_ID, Foreign key)
viii. Tip         = 537(User_ID, Foreign key), 3979(Business_ID, Foreign key)
ix.   User        = 10000(Primary key)
x.    Friend      = 11(Foreign key)
xi.   Elite_years = 2780(Foreign key)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:

		SELECT COUNT(*) FROM User
		WHERE 
  		  ID IS NULL OR
  		  Name IS NULL OR
  		  Review_count IS NULL OR
  		  Yelping_since IS NULL OR
  		  Useful IS NULL OR
  		  Funny IS NULL OR
  		  Cool IS NULL OR
  		  Fans IS NULL OR
  		  Average_stars IS NULL OR
  		  Compliment_hot IS NULL OR
  		  Compliment_more IS NULL OR
  		  Compliment_profile IS NULL OR
  		  Compliment_cute IS NULL OR
  		  Compliment_list IS NULL OR
  		  Compliment_note IS NULL OR
  		  Compliment_plain IS NULL OR
  		  Compliment_cool IS NULL OR
  		  Compliment_funny IS NULL OR
  		  Compliment_writer IS NULL OR
  		  Compliment_photos IS NULL;
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5 		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0 		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

		SELECT 
  		  City, 
  		  SUM(Review_count) AS TotalReviews 
		FROM business
		GROUP BY City
		ORDER BY TotalReviews DESC;
		

	Copy and Paste the Result Below:
	
		+-----------------+--------------+
		| city            | TotalReviews |
		+-----------------+--------------+
		| Las Vegas       |        82854 |
		| Phoenix         |        34503 |
		| Toronto         |        24113 |
		| Scottsdale      |        20614 |
		| Charlotte       |        12523 |
		| Henderson       |        10871 |
		| Tempe           |        10504 |
		| Pittsburgh      |         9798 |
		| Montréal        |         9448 |
		| Chandler        |         8112 |
		| Mesa            |         6875 |
		| Gilbert         |         6380 |
		| Cleveland       |         5593 |
		| Madison         |         5265 |
		| Glendale        |         4406 |
		| Mississauga     |         3814 |
		| Edinburgh       |         2792 |
		| Peoria          |         2624 |
		| North Las Vegas |         2438 |
		| Markham         |         2352 |
		| Champaign       |         2029 |
		| Stuttgart       |         1849 |
		| Surprise        |         1520 |
		| Lakewood        |         1465 |
		| Goodyear        |         1155 |
		+-----------------+--------------+
		(Output limit exceeded, 25 of 362 total rows shown)


	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

		SELECT 
  		  Stars,
  		  COUNT(Review_count) AS Totalreviews
		FROM Business
		WHERE City = 'Avon'
		GROUP BY Stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

		+-------+--------------+
		| stars | Totalreviews |
		+-------+--------------+
		|   1.5 |            1 |
		|   2.5 |            2 |
		|   3.5 |            3 |
		|   4.0 |            2 |
		|   4.5 |            1 |
		|   5.0 |            1 |
		+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:

		SELECT 
  		  Stars,
  		  COUNT(Review_count) AS Totalreviews
		FROM Business
		WHERE City = 'Beachwood'
		GROUP BY Stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
		+-------+--------------+
		| stars | Totalreviews |
		+-------+--------------+
		|   2.0 |            1 |
		|   2.5 |            1 |
		|   3.0 |            2 |
		|   3.5 |            2 |
		|   4.0 |            1 |
		|   4.5 |            2 |
		|   5.0 |            5 |
		+-------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
		SELECT 
  		  ID,
  		  Name,
  		  SUM(Review_count) AS Totalreviews
		FROM User
		GROUP BY ID, Name
		ORDER BY Totalreviews DESC
		LIMIT 3;
		
	Copy and Paste the Result Below:
		
		+------------------------+--------+--------------+
		| id                     | name   | Totalreviews |
		+------------------------+--------+--------------+
		| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
		| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
		| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
		+------------------------+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
		Posing more reviews isn't correlate with more fans because Roanna has only 104 fans, but has the reviews more than Amy, who has the most fans,but only has 609 reviews.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Yes, There are 1780 reviews with the word "love", while only has 232 reviews with the word "hate".

	
	SQL code used to arrive at answer:

		SELECT COUNT(*)	AS Love					
		FROM Review
		WHERE Text LIKE '%love%';

		+------+
		| Love |
		+------+
		| 1780 |
		+------+

		SELECT COUNT(*) AS Hate
		FROM Review
		WHERE Text LIKE '%hate%';

		+------+
		| Hate |
		+------+
		|  232 |
		+------+

	
	10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
		SELECT 
		  ID,
		  Name,
		  Fans
		FROM User
		ORDER BY Fans DESC
		LIMIT 10;

	
	Copy and Paste the Result Below:

		+------------------------+-----------+------+
		| id                     | name      | fans |
		+------------------------+-----------+------+
		| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
		| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
		| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
		| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
		| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
		| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
		| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
		| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
		| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
		| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
		+------------------------+-----------+------+	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	
		Yes, I picked Phoenix(City) and Restaurants(Category) to analyze. The restaurants with 2-3 stars group open longer hours than 3.5-4.5 stars group, So the restaurants with higher rating stars open late on Saturday.

ii. Do the two groups you chose to analyze have a different number of reviews?
      
		Not really. The restaurant with 4 star has a lot more reviews but the highest rating stars restaurant has less review compared with the group with 2-3 stars.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

		No, every restaurants is in a different location.

SQL code used for analysis:

		SELECT 
		  B.Name,
		  B.City,
		  C.category,
		  B.Stars,
		  H.Hours,
		  B.Review_count,
		  B.Address,
		  B.Postal_code
		FROM Business AS B
		INNER JOIN Category AS C
		ON B.ID = C.Business_ID 
		INNER JOIN Hours AS H
		ON B.ID = H.Business_ID
		WHERE B.City = 'Phoenix' AND C.Category ='Restaurants'
		GROUP BY B.Stars;
		
		+----------------------------------------+---------+-------------+-------+----------------------+--------------+-------------------------+-----------+
		| name                                   | city    | category    | stars | hours                | review_count | address                 |postal_code|
		+----------------------------------------+---------+-------------+-------+----------------------+--------------+-------------------------+-----------+
		| McDonald's                             | Phoenix | Restaurants |   2.0 | Saturday|5:00-0:00   |            8 | 1850 S 7th St           |85004      |
		| Gallagher's                            | Phoenix | Restaurants |   3.0 | Saturday|9:00-2:00   |           60 | 751 E Union Hls Dr      |85024      |
		| Five Guys                              | Phoenix | Restaurants |   3.5 | Saturday|10:00-22:00 |           63 | 2641 N 44th St, Ste 100 |85008      |
		| Bootleggers Modern American Smokehouse | Phoenix | Restaurants |   4.0 | Saturday|11:00-22:00 |          431 | 3375 E Shea Blvd        |85028      |
		| Charlie D's Catfish & Chicken          | Phoenix | Restaurants |   4.5 | Saturday|11:00-18:00 |            7 | 1153 E Jefferson St     |85034      |
		+----------------------------------------+---------+-------------+-------+----------------------+--------------+-------------------------+-----------+
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: The average star rating is higher for businesses that are open than businesses that are closed.
	
					Open:   AVG(stars) = 3.67900943396
					Closed: AVG(stars) = 3.52039473684
         
ii. Difference 2: The businesses that are open tend to have more reviews on average than ones that are closed.
		
					Open:   AVG(review_count) = 31.7570754717
					Closed: AVG(review_count0 = 23.1980263158
         
SQL code used for analysis:

		SELECT 
		  COUNT(DISTINCT(id)) AS NumberOfBusiness,
		  AVG(review_count) AS AVG_review, 
		  AVG(stars) AS AVG_star,
		  is_open,
		CASE 
		WHEN is_open = 1 THEN 'open'
		ELSE 'closed'
		END AS 'Business_Status'
		FROM business
		GROUP BY is_open;

		+------------------+---------------+---------------+---------+-----------------+
		| NumberOfBusiness |    AVG_review |      AVG_star | is_open | Business_Status |
		+------------------+---------------+---------------+---------+-----------------+
		|             1520 | 23.1980263158 | 3.52039473684 |       0 | closed          |
		|             8480 | 31.7570754717 | 3.67900943396 |       1 | open            |
		+------------------+---------------+---------------+---------+-----------------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:  
		
		I want to study the preference among different types of services on yelp dataset.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

		I will pick several types of services including 'Professional Services', 'Local Services', 'Home Services' and 'Financial Services'. Then I will analyze their star ratings and number of reviews on average that lead to get some insights on which type of services is popular on yelp dataset.
                           
iii. Output of your finished dataset:

		+-------------+-----------------------+------------+---------------+---------------+
		| city        | category              | N_Business |      AVG_Star |    AVG_Review |
		+-------------+-----------------------+------------+---------------+---------------+
		| Scottsdale  | Professional Services |          4 |          4.25 |          71.0 |
		| Mississauga | Local Services        |         12 | 4.20833333333 | 8.33333333333 |
		| Phoenix     | Home Services         |         16 |           4.0 |         5.875 |
		| Toronto     | Financial Services    |          3 | 2.66666666667 |          29.0 |
		+-------------+-----------------------+------------+---------------+---------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

		SELECT 
		  B.City,
		  C.Category,
		  COUNT(B.Name) AS N_Business,
		  AVG(B.Stars) AS AVG_Star,
		  AVG(B.Review_count) AS AVG_Review
		FROM business AS B 
		INNER JOIN category AS C ON C.Business_ID = B.ID
		WHERE C.Category IN('Professional Services', 'Local Services', 'Home Services', 'Financial Services')
		GROUP BY C.Category
		ORDER BY AVG(Stars) DESC;

